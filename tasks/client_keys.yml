# generate client keys
---
- name: Copy openssl client extensions
  copy:
    src: openssl-client.ext
    dest: "{{openvpn_key_dir}}"
    owner: root
    group: root
    mode: 0400

- name: generate client key
  command: "openssl req -nodes -newkey rsa:{{openvpn_rsa_bits}} -keyout {{item}}.key -out {{item}}.csr -days 3650 -subj /CN=OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/"
  args:
    chdir: "{{ openvpn_key_dir }}"
    creates: "{{item}}.key"
  with_items: "{{clients}}"

- name: Create directory for client configs
  file:
    path: "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}"
    state: directory

- name: Remove temp directory for all clients
  file:
    path: "{{ openvpn_base_dir }}/tmp-{{ openvpn_client_config_dir }}"
    state: absent

- name: Create temp directory for all clients
  file:
    path: "{{ openvpn_base_dir }}/tmp-{{ openvpn_client_config_dir }}/OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}"
    state: directory
  with_items: "{{ clients }}"

- name: Assign static IP
  template:
    src: static_client.ovpn.j2
    dest: "{{ openvpn_base_dir }}/tmp-{{ openvpn_client_config_dir }}/OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item.host[:24] }}/static-client"
  with_items: "{{ static_clients }}"

- name: Prepare LAN routes for all clients
  template:
    src: all_client.ovpn.j2
    dest: "{{ openvpn_base_dir }}/tmp-{{ openvpn_client_config_dir }}/OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/all-client"
  with_items: "{{ clients }}"

- name: Prepare iroutes for routable lan clients
  template:
    src: routable_lan_client.ovpn.j2
    dest: "{{ openvpn_base_dir }}/tmp-{{ openvpn_client_config_dir }}/OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item.host[:24] }}/routable-lan-client"
  with_items: "{{ openvpn_routable_lans }}"

- name: Assemble client config for all clients
  assemble:
    src: "{{ openvpn_base_dir }}/tmp-{{ openvpn_client_config_dir }}/OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}"
    dest: "{{ openvpn_base_dir }}/{{ openvpn_client_config_dir }}/OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}"
    owner: root
    group: root
    mode: 0444
  with_items: "{{ clients }}"
  when: clients is defined

- name: protect client keys
  file:
    path: "{{openvpn_key_dir}}/{{item}}.key"
    mode: 0400
  with_items: "{{clients}}"

- name: sign client key
  command: openssl x509 -req -in {{item}}.csr -out {{item}}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: "{{item}}.crt"
  with_items: "{{clients}}"

- name: register server ca key
  slurp:
    src: "{{openvpn_key_dir}}/ca.crt"
  register: ca_cert

- name: register tls-auth key
  slurp:
    src: "{{openvpn_key_dir}}/ta.key"
  register: tls_auth

- name: register client certs
  slurp:
    src: "{{openvpn_key_dir}}/{{item}}.crt"
  with_items: "{{clients}}"
  register: client_certs

- name: register client keys
  slurp:
    src: "{{openvpn_key_dir}}/{{item}}.key"
  with_items: "{{clients}}"
  register: client_keys

- name: generate client config
  template:
    src: client.ovpn.j2
    dest: "{{ openvpn_base_dir }}/{{item.0.item}}-{{inventory_hostname}}.ovpn"
    owner: root
    group: root
    mode: 0400
  with_together:
    - "{{client_certs.results}}"
    - "{{client_keys.results}}"

- name: fetch client config
  fetch:
    src: "{{ openvpn_base_dir }}/{{item}}-{{inventory_hostname}}.ovpn"
    dest: "{{ openvpn_fetch_config_dir }}/{{item}}/{{inventory_hostname}}{{config_fetch_suffix | default('')}}.ovpn"
    flat: yes
  with_items: "{{clients}}"
